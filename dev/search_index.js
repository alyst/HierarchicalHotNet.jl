var documenterSearchIndex = {"docs":
[{"location":"index.html#HierarchicalHotNet.jl-package","page":"Introduction","title":"HierarchicalHotNet.jl package","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"HierarchicalHotNet.jl implements Hierarchical HotNet algorithm (see the original paper by M.A. Reyna et al) with a few permormance optimization and additional features.","category":"page"},{"location":"index.html#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"scctree.html#scctree","page":"SCC Tree","title":"Strongly Connected Components tree","text":"","category":"section"},{"location":"scctree.html","page":"SCC Tree","title":"SCC Tree","text":"HierarchicalHotNet.SCCTree\nHierarchicalHotNet.scctree\nHierarchicalHotNet.cut","category":"page"},{"location":"scctree.html#HierarchicalHotNet.SCCTree","page":"SCC Tree","title":"HierarchicalHotNet.SCCTree","text":"The tree of strongly connected components. Organizes the strongly connected components of the weighted directed graph into a tree.\n\nCutting the tree at specific threshold with cut gives the corresponding strongly connected components. The root of the tree corresponds to the weakest threshold.\n\n\n\n\n\n","category":"type"},{"location":"scctree.html#HierarchicalHotNet.scctree","page":"SCC Tree","title":"HierarchicalHotNet.scctree","text":"scctree(g::Union{AbstractSimpleWeightedGraph, AbstractMatrix};\n        method=:bisect, skipval=0, rev=false) -> SCCTree\n\nComputes the hierarchical decomposition of a weighted directed graph into strongly connected components.\n\nArguments\n\ng::AbstractSimpleWeightedGraph: the graph (or its adjcency matrix  representation) to partition into components\nmethod::Symbol, defaults to :bisect: the method for partitioning.  The supported methods are :bisect (the fastest) and :bottomup (slow,  but simpler).\nskipval::Number, defaults to zero: what value of the adjacency matrix  should be treated as no edge.\nrev::Bool, default to false: if true, bigger edges weights are considered  weaker than smaller ones\n\n\n\n\n\n","category":"function"},{"location":"scctree.html#HierarchicalHotNet.cut","page":"SCC Tree","title":"HierarchicalHotNet.cut","text":"cut(tree, threshold; minsize=1) -> IndicesPartition\n\nCuts the tree at the given threshold to get the corresponding strongly connected components of the original graph. minsize optional parameter specifies whether components smaller than that would be ignored.\n\n\n\n\n\n","category":"function"}]
}
